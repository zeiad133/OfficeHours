

.snip1578 {
  font-family: 'Open Sans', Arial, sans-serif;
  position: relative;
  display: inline-block;
  margin: 40px 8px;
  min-width: 260px;
  max-width: 315px;
  height: 230px;
  width: 100%;
  color: #000;
  text-align: left;
  font-size: 16px;
  background: #fff;
  border-radius: 5px;
  border: 2px solid #DB0C18;

}

.snip1578 *,
.snip1578:before,
.snip1578:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

.snip1578 img {
  max-width: 35%;
  max-height:100%; 
  margin-top: -15px;
  margin-left: 60%;
  margin-bottom: 15px;
  backface-visibility: hidden;
  vertical-align: top;
  border-radius: 5px;
}


.snip1578 figcaption {
  position: absolute;
  top: 0;
  right: 40%;
  left: 0;
  bottom: 0;
  padding: 15px;
}

.snip1578 h3 {
  margin: 0;
  font-size: 1.1em;
  font-weight: normal;
  text-transform: uppercase;
  font: bold;

}

.snip1578 .icons {
  font-size: 1.6rem;
}

.snip1578 .icons a {
  color: #ccc;
}

.snip1578 .icons a:hover {
  color: #2980b9;
}


/* Demo purposes only */

body {
  background-color: white;
  text-align: center;

}

 .intro-heading {
    color: #DB0C18;
    font-size: 4.28571em;
    font-family: "Proxima Nova bold";
    position: relative;
    z-index: 10;
    max-width: 60%;
    margin: 0 auto;
    font-size: 75px;
    font-weight: 700;
    line-height: 75px;
    margin-bottom: 50px;
    font-family: 'Montserrat', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  }

 


// select the svg element
$svg: "";
// select the path
$path: "";
// for each radio
@for $i from 1 through 5 {
  // for each valid star
  @for $x from 1 through $i {
    // add checked textarea to selectors
    $svg: $svg + "#star-#{$i}:checked ~ ";
    $path: $path + "#star-#{$i}:checked ~ ";
    // add svg or path element sib to selectors
    // scope = section label svg [path]
    $svg: $svg + "section [for='star-#{$x}'] svg";
    $path: $path + "section [for='star-#{$x}'] svg path";
    // if not the last, we add a comma
    @if $x != $i {
      $svg: $svg + ", ";
      $path: $path + ", ";
    }
  }
  // if not the last, we add the comma
  @if $i != 5 {
    $svg: $svg + ", ";
    $path: $path + ", ";
  }
}

// style the active svg
#{$svg} {
  transform: scale(1);
}
// style the active path
#{$path} {
  fill: #FCE200;
  stroke: darken(#FCE200, 10%);
}  

section {
  width: 120px;
  float: left;
  text-align: center;
}

label {
  width: 20px;
  text-align: center;
  cursor: pointer;
  svg {
    width: 100%;
    height: auto;
    fill: white;
    stroke: #CCC;
    transform: scale(0.8);
    transition: transform 200ms ease-in-out;
    path {
      transition: fill 200ms ease-in-out,
        stroke 100ms ease-in-out;
    }
  }
}

label[for="star-null"] {
  display: block;
  margin: 0 auto;
  color: #999;
}


textarea {
  margin-top: 1rem;
}



//----------textbox
body {
    font-family: -apple-system,system-ui,BlinkMacSystemFont,"Segoe UI","Roboto","Helvetica Neue", Arial, sans-serif;
  }
  
  .demo-container {
    width: 25rem;
  }
  
  .tb-container {
    position: relative;
    margin: 0 0rem;
    margin-top: 0rem;
  }
  
  .aumd-tb-label {
    position: absolute;
    color: #999;
    top: 10%;
    -webkit-transform: translate(0.75rem, -50%);
            transform: translate(0.75rem, -50%);
    pointer-events: none;
    transition: all .14s ease-in-out;
  }
  
  textarea[type="text"].aumd-tb{
    color: black;
    border: none;
    border-bottom: 1px solid #999;
    padding: 0.25rem 0.25rem;
    font-size: 0.8rem;
    display: block;
    box-sizing: border-box;
    width: 150px;
    height: 80px;
  }
  textarea[type="text"].aumd-tb:focus,
  {
    outline: none;
  }
  textarea[type="text"].aumd-tb.c-fix, textarea[type="text"].aumd-tb:focus, textarea[type="text"].aumd-tb:not(:placeholder-shown),
   {
    border-color: transparent;
  }
  textarea[type="text"].aumd-tb.c-fix ~ label, textarea[type="text"].aumd-tb:focus ~ label, textarea[type="text"].aumd-tb:not(:placeholder-shown) ~ label,
 {
    color: #DB0C18;
    font-size: 10px;
    top: calc(-30% );
    -webkit-transform: translate(0.75rem, 0%);
            transform: translate(0.75rem, 0%);
  }
  textarea[type="text"].aumd-tb.c-fix ~ span:after, textarea[type="text"].aumd-tb:focus ~ span:after, textarea[type="text"].aumd-tb:not(:placeholder-shown) ~ span:after,
   {
    width: 150px;
    left: 0;
  }
  textarea[type="text"].aumd-tb::-webkit-textarea-placeholder,
  textarea[type="password"].aumd-tb::-webkit-textarea-placeholder {
    color: transparent;
  }
  textarea[type="text"].aumd-tb::-moz-placeholder,
  textarea[type="password"].aumd-tb::-moz-placeholder {
    color: transparent;
  }
  textarea[type="text"].aumd-tb:-ms-textarea-placeholder,
  textarea[type="password"].aumd-tb:-ms-textarea-placeholder {
    color: transparent;
  }
  textarea[type="text"].aumd-tb ~ .validation,
  textarea[type="password"].aumd-tb ~ .validation {
    display: block;
    color: #999;
    font-size: 0.72rem;
    visibility: hidden;
    max-height: 0;
    height: 0;
    transition: all .14s ease-in-out;
    margin-left: 0rem;
  }
  textarea[type="text"].aumd-tb ~ .validation:after,
  textarea[type="password"].aumd-tb ~ .validation:after {
    transition: all .14s ease-in-out;
    left: 10%;
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    visibility: visible;
    background-color: black;
  }
  
  .snip1578 .buttons {
    display: flex;
    justify-content: center;
    margin-top: 50px;
  }
  
  .snip1578 .button {
    width: 60px;
    height: 30px;
    flex: 0 0 75px;
    border-radius: 50%;
    color: black;
    background: white;

    border: 5px solid #fff;
  }
  .snip1578 .button:first-child {
    margin-right: 25px;
  }
  .snip1578 .button:hover {
    -webkit-transform: translateX(1px) translateY(1px);
            transform: translateX(1px) translateY(1px);
  }
  
  .snip1578 .button-icon {
    width: 100%;
    height: 100%;
  }
 